<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>美股ETF投資人申報NEC退稅分享</title>
    <url>//2023/11/29/1040-NR-tax-return/</url>
    <content><![CDATA[<p><img data-src="https://cdn.statically.io/gh/j4nusl1n/blog-images@master/1040-NR-tax-return/kelly-sikkema-M98NRBuzbpc-unsplash.hb3ho92g448.webp" alt="black Android smartphone near ballpoint pen, tax withholding certificate on top of white folder"><em>Photo by <span class="exturl" data-url="aHR0cHM6Ly91bnNwbGFzaC5jb20vQGtlbGx5c2lra2VtYT91dG1fY29udGVudD1jcmVkaXRDb3B5VGV4dCZ1dG1fbWVkaXVtPXJlZmVycmFsJnV0bV9zb3VyY2U9dW5zcGxhc2g=">Kelly Sikkema<i class="fa fa-external-link-alt"></i></span> on <span class="exturl" data-url="aHR0cHM6Ly91bnNwbGFzaC5jb20vcGhvdG9zL2JsYWNrLWFuZHJvaWQtc21hcnRwaG9uZS1uZWFyLWJhbGxwb2ludC1wZW4tdGF4LXdpdGhob2xkaW5nLWNlcnRpZmljYXRlLW9uLXRvcC1vZi13aGl0ZS1mb2xkZXItTTk4TlJCdXpicGM/dXRtX2NvbnRlbnQ9Y3JlZGl0Q29weVRleHQmdXRtX21lZGl1bT1yZWZlcnJhbCZ1dG1fc291cmNlPXVuc3BsYXNo">Unsplash<i class="fa fa-external-link-alt"></i></span></em></p>
<h2 id="前言">前言</h2>
<details class="note warning"><summary><p>聲明</p>
</summary>
<p>本人沒有任何法律會計或是美國稅法相關背景，英文程度也不算好。<br>
以下內容純屬個人見解及個人做法，純屬記錄個人投資歷程。<br>
歡迎留言交流指正，但相關稅務責任需自負。</p>

</details>
<p>簡單介紹美股ETF投資人如何填寫表格申請退稅及申請ITIN<br>
並且附上本人申請退稅流程作為參考</p>
<span id="more"></span>
<h2 id="為什麼要退稅">為什麼要退稅</h2>
<blockquote>
<p>以下內容為參考 <strong><span class="exturl" data-url="aHR0cHM6Ly9yaWJ0dy5ibG9nc3BvdC5jb20v">Rib的投資學習筆記<i class="fa fa-external-link-alt"></i></span></strong> 的 <strong><span class="exturl" data-url="aHR0cHM6Ly9yaWJ0dy5ibG9nc3BvdC5jb20vMjAxNC8wNC9ORUMtVGF4LVJlZnVuZC5odG1s">NEC退稅文章<i class="fa fa-external-link-alt"></i></span></strong> 後個人整理的概要<br>
若想更詳細了解建議閱讀Rib前輩整理的退稅文章系列</p>
</blockquote>
<p>非美國投資人(<strong>NRA</strong>)因為必須填寫<em>W-8BEN</em>表格給券商，配息前券商會自動依照預扣稅比例(台灣人30%)，從配息中預先扣除後再給投資人。因此其實收到的配息已經是完稅，無需在隔年向IRS報稅。</p>
<p>然而部分配息是有可能屬於<strong>無須課稅</strong>(<em>Non-taxable</em>)的種類，如下列提到的幾種項目。</p>
<ul>
<li><em>Return of Capital</em> (<strong>ROC</strong>): 配息來自本金</li>
<li><em>Foreign Source Income</em> (<strong>FSI</strong>): 外國來源收入</li>
<li><em>Qualified Interest Income</em> (<strong>QII</strong>): 基金配息來自免稅的部分</li>
<li><em>Long/Short-term Capital Gain Distribution</em> (<strong>L/T CG</strong>, <strong>S/T CG</strong>): 長期/短期資本利得分配</li>
</ul>
<p>隨著投入本金增長的情況下，配息被預扣稅的數目累積起來也是不可小覷，此時若能透過退稅退回無須課稅的部分自然是最好。</p>
<p>這類的配息再入帳後可以經由再分類的程序，在隔年收到券商提供的<strong>1042-S</strong>表格後，填寫<strong>1040-NR</strong>向IRS申報<em>Non-Effectively Connected Income</em> (<strong>NEC</strong>)其中屬於無須扣稅的部分，進而退回多扣除的配息。</p>
<h2 id="配息再分類">配息再分類</h2>
<h3 id="抽取稅務資料">抽取稅務資料</h3>
<p>在進行配息再分類前，必須先取得各基金公司(e.g. <em>Vanguard</em>, <em>iShares</em>)提供的稅務資料，才能釐清各個ETF的配息中哪些部分屬於可退稅的項目。</p>
<p>感謝Rib前輩已經有整理台灣投資人常選擇的基金公司的稅務資料，可以在 <strong><span class="exturl" data-url="aHR0cHM6Ly9yaWJ0dy5ibG9nc3BvdC5jb20vMjAxNS8wNC90YXgtaW5mby1zcHJlYWRzaGVldC5odG1s">NEC退稅稅務資料抽取試算表<i class="fa fa-external-link-alt"></i></span></strong> 中取得整理過的資料，以下用 <em>Vanguard</em> 的<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMVZCRTVIZ05OYXJCalVDX25fOHZRMDRNTUNYQ29kd1pfU2tVamVzU3NvWEEvZWRpdD91c3A9ZHJpdmVfbGluaw==">2022稅務資料抽取試算表<i class="fa fa-external-link-alt"></i></span>作為範例。</p>
<p><img data-src="https://cdn.statically.io/gh/j4nusl1n/blog-images@master/1040-NR-tax-return/BND-dividend.9e1klupvom8.webp" alt="以2022 Vanguard BND/VXUS稅務資料抽取為例"><em>以2022 Vanguard BND/VXUS稅務資料抽取為例</em></p>
<p>從範例圖中可以看到，BND的每月配息中幾乎有90%為<strong>QII</strong>、VXUS的配息全數屬於<strong>FSI</strong>。這些配息原本從券商入帳時都會被扣除30%，透過配息再分類的步驟，我們可以將最後計算出來多扣除的部分申請退回。</p>
<h3 id="填寫再分類報表">填寫再分類報表</h3>
<p>擁有抽取出的稅務資料以後，就能夠以此計算實際收到的配息中屬於免稅的金額。</p>
<p>以Rib前輩製作的<span class="exturl" data-url="aHR0cHM6Ly9yaWJ0dy5ibG9nc3BvdC5jb20vMjAxNy8wNC9zY2h3YWItbmVjLTIwMTYuaHRtbA==">Schwab NEC退稅試算表<i class="fa fa-external-link-alt"></i></span>為例，依照文章及試算表指示將稅務資料、券商交易紀錄、券商提供的<strong><strong><strong><strong>1042-S</strong></strong></strong></strong>等資料一一填入對應試算表欄位後，就能產製一份配息再分類報表如下圖。</p>
<p><img data-src="https://cdn.statically.io/gh/j4nusl1n/blog-images@master/1040-NR-tax-return/reclassification.1xpkh76rtkdc.webp" alt="配息再分類報表範例"><em>配息再分類報表範例</em></p>
<p>其中會得到四個重要的數字，依序分別為</p>
<ul>
<li><em>Total Taxable Income</em>: 應稅收入</li>
<li><em>Total Tax</em>: 應付稅金</li>
<li><em>Federal Tax Withheld</em>: 預扣稅</li>
<li><em>Tax Overpaid</em>: 溢付稅金</li>
</ul>
<p>之後在填寫<strong>1040-NR</strong>時必須要填在對應的欄位。</p>
<h2 id="申請ITIN：填寫W-7">申請ITIN：填寫W-7</h2>
<p>若是第一次向IRS報稅，必須填寫<strong>W-7</strong>表格申請一組個人稅務編號(<em>Individual Taxpayer Identification Number</em>, <strong>ITIN</strong>)，此號碼格式與美國的社會安全編號(<em>Social Security Number</em>, <strong>SSN</strong>)類似，主要是提供<strong>NRA</strong>報稅時使用。</p>
<p>申請<strong>ITIN</strong>所需文件有下列幾項</p>
<ul>
<li>W-7: 申請<strong>ITIN</strong>專用表格(<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXJzLmdvdi9wdWIvaXJzLXBkZi9mdzcucGRm">PDF檔案連結<i class="fa fa-external-link-alt"></i></span>)</li>
<li>1040-NR: 申請退稅用表格</li>
<li>身分證明文件: <strong>護照正本</strong>或是<strong>外交部認證的護照正影本相符證明</strong>
<ul>
<li>建議不要使用正本，因為申請完IRS會用平信寄回來容易遺失</li>
<li>外交部認證護照正影本相符證明申請費用<em>NTD$400</em></li>
</ul>
</li>
</ul>
<p>建議填寫表格時，可以使用支援PDF的網頁瀏覽器(e.g. Chrome, Safari)開啟文件，除了需要簽名的欄位外使用打字方式填寫，以避免人工填寫錯誤。</p>
<h2 id="申請退稅：填寫1040-NR">申請退稅：填寫1040-NR</h2>
<p>填寫1040-NR時所需要填寫的有三份表格，都能夠在IRS的<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXJzLmdvdi9mb3Jtcy1wdWJzL2Fib3V0LWZvcm0tMTA0MC1ucg==">1040-NR頁面<i class="fa fa-external-link-alt"></i></span>中找到。</p>
<p>分別為：</p>
<ol>
<li>1040-NR 主表 (<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXJzLmdvdi9wdWIvaXJzLXBkZi9mMTA0MG5yLnBkZg==">1040-NR PDF檔案<i class="fa fa-external-link-alt"></i></span>)</li>
<li>Schedule NEC</li>
<li>Schedule OI</li>
</ol>
<p>填寫1040-NR主表時，需注意第一頁上方的年份，若是需要申報更之前年份的退稅，可以在<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXJzLmdvdi9wcmlvci15ZWFyLWZvcm1zLWFuZC1pbnN0cnVjdGlvbnM=">IRS歷年表格<i class="fa fa-external-link-alt"></i></span>的頁面搜尋對應關鍵字並開啟文件填寫。</p>
<div class="note warning"><p><strong>以下填寫範例為本人經驗，如有其他美國稅務身份或是美國來源收入，請諮詢專業稅務人士！</strong></p>
</div>
<div class="tabs" id="1040-nr-表格"><ul class="nav-tabs"><li class="tab active"><a href="#1040-nr-表格-1">1040-NR表格第一頁</a></li><li class="tab"><a href="#1040-nr-表格-2">Schedule NEC</a></li><li class="tab"><a href="#1040-nr-表格-3">1040-NR表格第二頁</a></li><li class="tab"><a href="#1040-nr-表格-4">Schedule OI</a></li></ul><div class="tab-content"><div class="tab-pane active" id="1040-nr-表格-1"><p><img data-src="https://cdn.statically.io/gh/j4nusl1n/blog-images@master/1040-NR-tax-return/1040-NR-page1.1qutg649uhxc.webp" alt="1040-NR表格第一頁"><em>1040-NR表格第一頁</em></p></div><div class="tab-pane" id="1040-nr-表格-2"><p><img data-src="https://cdn.statically.io/gh/j4nusl1n/blog-images@master/1040-NR-tax-return/schedule-nec.4iud75o85km0.webp" alt="Schedule NEC"><em>Schedule NEC</em></p></div><div class="tab-pane" id="1040-nr-表格-3"><p><img data-src="https://cdn.statically.io/gh/j4nusl1n/blog-images@master/1040-NR-tax-return/1040-NR-page2.3wsjskyqvbs0.webp" alt="1040-NR表格第二頁"><em>1040-NR表格第二頁</em></p></div><div class="tab-pane" id="1040-nr-表格-4"><p><img data-src="https://cdn.statically.io/gh/j4nusl1n/blog-images@master/1040-NR-tax-return/schedule-oi.49nizqrig2m0.webp" alt="Schedule OI"><em>Schedule OI</em></p></div></div></div>
<p>注意事項：</p>
<ul>
<li><em>Schedule NEC</em>上方<em>Nature of Income</em>對應為預扣稅比例，台灣投資人NRA身份為30%，若有其他國家稅務身份則需填入對應比例的欄位。</li>
<li>主表的第二頁<strong>Direct Deposit</strong>資訊，若是券商有提供可直接入帳的帳戶，可以填寫<em>Routing Number</em>及<em>Account Number</em>，<strong>IRS</strong>退稅時就會直接匯入填寫的帳戶，否則需要等待IRS退稅支票寄回。</li>
<li><em>Schedule OI</em>各項目說明，可參考Rib前輩的<span class="exturl" data-url="aHR0cHM6Ly9yaWJ0dy5ibG9nc3BvdC5jb20vMjAxNi8wNC8xMDQwbnItc2NoZWR1bGUtb2kuaHRtbA==">填寫說明範例<i class="fa fa-external-link-alt"></i></span>
<ul>
<li>A~H：攸關投資人的稅籍身份認定，請依個人狀況填寫</li>
<li>L：若擁有<strong>與美國有稅務協定的國家的稅籍身份</strong>請照實填寫，必要情況時須額外附上<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXJzLmdvdi9mb3Jtcy1wdWJzL2Fib3V0LWZvcm0tODgzMw==">Form 8833<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
</ul>
<h2 id="文件寄出">文件寄出</h2>
<p>上述文件填寫完成以後需要寄送到IRS，申請ITIN需要把所需文件</p>
<ul>
<li>W-7 及 身分證明文件</li>
<li>1040-NR, Schedule NEC, OI</li>
<li>1042-S (Copy C)</li>
<li>其他報稅文件</li>
</ul>
<p>寄送到下列地址</p>
<div class="note info"><p>Internal Revenue Service<br>
Austin Service Center<br>
ITIN Operation<br>
P.O. Box 149342<br>
Austin, TX 78714-9342</p>
</div>
<p>若是單純報稅的話，所需文件為</p>
<ul>
<li>1040-NR, Schedule NEC, OI</li>
<li>1042-S (Copy C)</li>
<li>其他報稅文件</li>
</ul>
<p>寄送到下列地址</p>
<div class="note info"><p>Department of the Treasury<br>
Internal Revenue Service<br>
Austin, Texas 73301-0215</p>
</div>
<h2 id="退稅時程">退稅時程</h2>
<ul>
<li>2023-08-30 申請護照正影本相符證明</li>
<li>2023-09-01 領取護照正影本相符證明</li>
<li>2023-09-05 文件寄出(國際掛號郵資NTD$293)</li>
<li>2023-09-07 郵件離開台灣</li>
<li>2023-09-08 郵件抵達美國互換局</li>
<li>2023-09-18 郵件送達IRS Austin Service Center ITIN Operation
<ul>
<li>透過USPS Customer Support Email得知送達日期</li>
</ul>
</li>
<li>2023-11-01 2022年度退稅入帳(Direct Deposit)</li>
<li>2023-11-16 2021年度退稅入帳(Direct Deposit)</li>
<li>2023-11-20 收到IRS ITIN通知信(CP565)
<ul>
<li>2023-10-12 從IRS寄出(從信件內容得知)</li>
</ul>
</li>
</ul>
<hr>
<p>ref.</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9yaWJ0dy5ibG9nc3BvdC5jb20vMjAxNC8wNC9ORUMtVGF4LVJlZnVuZC5odG1s">美國券商NRA投資人NEC退稅總整理<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuYm9jYS5nb3YudHcvY3AtMTY5LTM5ODEtNzA2N2YtMS5odG1s">外交部申請出具「護照正影本相符」證明流程圖<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>投資</category>
        <category>美股投資</category>
      </categories>
      <tags>
        <tag>美股投資</tag>
        <tag>報稅</tag>
        <tag>美股ETF</tag>
        <tag>美股退稅</tag>
        <tag>美股ETF退稅</tag>
      </tags>
  </entry>
  <entry>
    <title>2023投資回顧</title>
    <url>/post/250e252/</url>
    <content><![CDATA[<p><img data-src="https://cdn.jsdelivr.net/gh/j4nusl1n/blog-images@master/2023-investment-review-md/micheile-henderson-SoT4-mZhyhE-unsplash.27kq88vkv668.webp" alt="green plant in clear glass cup full of coins"><em>Photo by <span class="exturl" data-url="aHR0cHM6Ly91bnNwbGFzaC5jb20vQG1pY2hlaWxlP3V0bV9jb250ZW50PWNyZWRpdENvcHlUZXh0JnV0bV9tZWRpdW09cmVmZXJyYWwmdXRtX3NvdXJjZT11bnNwbGFzaA==">micheile henderson<i class="fa fa-external-link-alt"></i></span> on <span class="exturl" data-url="aHR0cHM6Ly91bnNwbGFzaC5jb20vcGhvdG9zL2dyZWVuLXBsYW50LWluLWNsZWFyLWdsYXNzLWN1cC1Tb1Q0LW1aaHloRT91dG1fY29udGVudD1jcmVkaXRDb3B5VGV4dCZ1dG1fbWVkaXVtPXJlZmVycmFsJnV0bV9zb3VyY2U9dW5zcGxhc2g=">Unsplash<i class="fa fa-external-link-alt"></i></span></em></p>
<h2 id="前言">前言</h2>
<p>簡單回顧一下2023年個人投資方式的調整，會分成台股、美股及其他心得三部分</p>
<span id="more"></span>
<details class="note warning"><summary><p>投資理財內容聲明</p>
</summary>
<p><em>在進行金融投資前，請務必謹慎評估並充分了解相關風險。金融市場變動無常，投資可能面臨損失，過去的表現並不代表未來的結果。本文提供的任何投資建議僅供參考，讀者應基於自身財務狀況、風險承受能力和投資目標進行評估。建議閱讀相關文件，並在必要時諮詢專業財務顧問。投資決策應以全面資訊和謹慎分析為基礎，本部落格不對任何投資行為可能帶來的損失負責。</em></p>

</details>
<h2 id="台股">台股</h2>
<p>2023台股資產主要調整的部分，就是開始使用指數期貨轉倉的方式持有大盤。目前除了部分現金放在券商保證金專戶以外，其餘部分先停留在幾間高利活存內。</p>
<p>指數期貨轉倉具體操作及跟其他指數ETF差異，可以參考哆啦王的<span class="exturl" data-url="aHR0cHM6Ly9maW5hbmNlLmZmYWFyci5jb20udHcvMjAyMi8xMi90YWl3YW4tZnV0dXJlLXRvLXRyYWNrLXRhaXdhbi1zdG9jay1tYXJrZXQuaHRtbA==">這篇文章<i class="fa fa-external-link-alt"></i></span>。</p>
<p>原本台股定期定額006208的部分也會持續，之後等累積到足夠量，會再考慮是否要增加期貨口數。</p>
<h2 id="美股">美股</h2>
<p>2023年比較值得紀念的是，美股資產終於成長到6位數了，算是達成了一個小里程碑的感覺。</p>
<p>美股部位配置維持跟去年相同，配置比例大約是<strong>VTI</strong> <em>55%</em>, <strong>VXUS</strong> <em>40%</em>, <strong>VGT</strong> <em>5%</em>。</p>
<p>2023年的時候算了一下2021, 2022年度NRA預扣稅，發現VXUS這邊的配息似乎多到值得花時間申請退稅，因此開始研究申請退稅，詳細作法請看<a href="/2023/11/29/1040-NR-tax-return/" title="美股ETF投資人申報NEC退稅分享">此篇文章</a><br>
退稅的金額也有順利在2023年底入帳，2024沒意外也會持續申請退稅。</p>
<h2 id="其他心得">其他心得</h2>
<p>2023年度做的調整主要是因為讀了<span class="exturl" data-url="aHR0cHM6Ly93d3cuYm9va3MuY29tLnR3L3Byb2R1Y3RzLzAwMTA4NzYwOTc=">生命週期投資法<i class="fa fa-external-link-alt"></i></span>以後，開始慢慢把部分部位用槓桿操作，同時也能測試自己的風險耐受度。<br>
目前先考慮操作一年看看狀況，到時候再決定是否要繼續使用期貨槓桿或是其他方式，但最終目標還是讓股票部位曝險能成長到設定的生命週期目標。</p>
]]></content>
      <categories>
        <category>投資</category>
        <category>美股投資</category>
        <category>年度回顧</category>
      </categories>
      <tags>
        <tag>美股投資</tag>
        <tag>報稅</tag>
        <tag>美股ETF</tag>
        <tag>美股退稅</tag>
        <tag>美股ETF退稅</tag>
        <tag>台股投資</tag>
        <tag>台股ETF</tag>
      </tags>
  </entry>
  <entry>
    <title>2024/11/19 京阪・紅葉・USJ</title>
    <url>/post/e81227d7/</url>
    <content><![CDATA[<h2 id="目錄">目錄</h2>
<ul>
<li><a href="#%E7%9B%AE%E9%8C%84">目錄</a></li>
<li><a href="#%E8%A1%8C%E7%A8%8B">行程</a></li>
<li><a href="#%E6%AF%8F%E6%97%A5%E8%A1%8C%E7%A8%8B">每日行程</a>
<ul>
<li><a href="#Day-1">Day 1</a></li>
<li><a href="#Day-2">Day 2</a></li>
<li><a href="#Day-3">Day 3</a></li>
<li><a href="#Day-4">Day 4</a></li>
<li><a href="#Day-5">Day 5</a></li>
<li><a href="#Day-6">Day 6</a></li>
</ul>
</li>
<li><a href="#%E8%B3%BC%E7%89%A9">購物</a></li>
<li><a href="#%E9%A4%90%E5%BB%B3">餐廳</a></li>
<li><a href="#%E6%99%AF%E9%BB%9E">景點</a></li>
</ul>
<h2 id="行程">行程</h2>
<table>
<thead>
<tr>
<th>時間/日期</th>
<th><a href="#Day-1">11/19</a> Tue.</th>
<th><a href="#Day-2">11/20</a> Wed.</th>
<th><a href="#Day-3">11/21</a> Thu.</th>
<th><a href="#Day-4">11/22</a> Fri.</th>
<th><a href="#Day-5">11/23</a> Sat.</th>
<th><a href="#Day-6">11/24</a> Sun.</th>
</tr>
</thead>
<tbody>
<tr>
<td>清晨</td>
<td>6點抵達大阪(KIX)<br>GK50<br>02:00 - 06:00</td>
<td>早餐前去清水寺<br>回去吃早餐</td>
<td>早餐</td>
<td>早餐</td>
<td>早餐</td>
<td>早餐</td>
</tr>
<tr>
<td>早上</td>
<td>逛臨空城</td>
<td></td>
<td>嵐山<br><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvU2ozaUtENXpDeWdNRjZ3Rjg=">寶嚴院<i class="fa fa-external-link-alt"></i></span><br>竹林小徑<br><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvRGJrSnZGOENlVEZtY1lMQjY=">展望台<i class="fa fa-external-link-alt"></i></span></td>
<td></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvODVhNEtLVzZXUVU0Y2haeTY=">USJ<i class="fa fa-external-link-alt"></i></span><br>好萊塢區<br>哈利波特區</td>
<td></td>
</tr>
<tr>
<td>中午</td>
<td>臨空城吃午餐</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvSkU4cnRuUGJ0MVVIUTVEZDg=">麵屋 豬一<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvOTNlcDV6YU1peVEyUEhOODY=">Ogura茶屋 烏龍麵<i class="fa fa-external-link-alt"></i></span></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvOVNYM01LRVhTc0ZEekxXVEE=">三嶋亭 高島屋店 7F<i class="fa fa-external-link-alt"></i></span></td>
<td>USJ</td>
<td></td>
</tr>
<tr>
<td>下午</td>
<td>前往京都放行李<br>前往伏見稻荷神社</td>
<td>哲學之道<br><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvcFNOVGR5eW92d1BtQVo2dzY=">南禪寺<i class="fa fa-external-link-alt"></i></span></td>
<td>常寂光寺<br>嵐山街道逛逛</td>
<td>回大阪放行李<br>逛街</td>
<td>USJ 任天堂區</td>
<td>逛街</td>
</tr>
<tr>
<td>晚上</td>
<td>東福寺 夜楓 17:30~19:30</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvZGhZdkttdmp0dnNON0JNdjg=">永觀堂<i class="fa fa-external-link-alt"></i></span>夜楓點燈 17:30~20:30 (排隊入場)</td>
<td>清水寺夜楓點燈 ~21:30</td>
<td>逛道頓堀/心齋橋</td>
<td>USJ 回去哈利波特區</td>
<td>前往機場<br>GK51<br>23:20 - 01:30(+1)</td>
</tr>
<tr>
<td>晚餐</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvV1E1OHJnMnE1Ujhlek1nRjg=">京的燒肉處 弘 八條口店<i class="fa fa-external-link-alt"></i></span></td>
<td></td>
<td></td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvV2c0aUhTQnZHd3NwMWFXNDk=">肉丼專門店 道頓堀肉劇場<i class="fa fa-external-link-alt"></i></span></td>
<td>USJ</td>
<td>大阪市區或臨空城</td>
</tr>
<tr>
<td>飯店</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvZ1YyM2g2OUw5UlZGZGg4azg=">THE POCKET HOTEL 京都烏丸五条<i class="fa fa-external-link-alt"></i></span></td>
<td>-</td>
<td>-</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvdG9MM3VvQlFmUUx1WDZveDY=">Comfort Hotel Shinsaibashi<i class="fa fa-external-link-alt"></i></span></td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table>
<span id="more"></span>
<h2 id="每日行程">每日行程</h2>
<h3 id="Day-1">Day-1</h3>
<h3 id="Day-2">Day-2</h3>
<h3 id="Day-3">Day-3</h3>
<h3 id="Day-4">Day-4</h3>
<h3 id="Day-5">Day-5</h3>
<h3 id="Day-6">Day-6</h3>
<hr>
<h2 id="購物">購物</h2>
<ul>
<li>Longchamp
<ul>
<li>臨空城Outlet</li>
<li>京都車站 LONGCHAMP ジェイアール京都伊勢丹 3樓</li>
<li>大阪難波 高島屋2F Longchamp</li>
<li>大阪梅田 阪急本店1F
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvNldrTnhmSkREdXdKYlN4Nzc=">https://maps.app.goo.gl/6WkNxfJDDuwJbSx77<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
</ul>
</li>
<li>Kiddyland 梅田 阪急三番街北館 B1F
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9tYXBzLmFwcC5nb28uZ2wvUU13cWk0cnFhY3BVdUROeTk=">https://maps.app.goo.gl/QMwqi4rqacpUuDNy9<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
</ul>
<hr>
<h2 id="餐廳">餐廳</h2>
<ul>
<li>京都
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9ib2JieS50dy8yMDI0LTAyLTAzLTI4NjEv">https://bobby.tw/2024-02-03-2861/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
</li>
<li>大阪</li>
</ul>
<hr>
<h2 id="景點">景點</h2>
<ol>
<li>東福寺 夜楓 17:30~19:30(需預約) <span class="exturl" data-url="aHR0cHM6Ly9lYy50cmF2ZWwuanItY2VudHJhbC5jby5qcC90cC9vcHRpb25hbEZhY2lsaXRpZXMvWjAwMDAwMi9wbGFucy9aMDAwMDAyLUMwMDMxMzYtTTAwNDMyNS9kZXRhaWw/dXNlRGF0ZT0yMDI0MTExOSZsYW5nPWph">預約網址<i class="fa fa-external-link-alt"></i></span></li>
<li>永觀堂 夜楓點燈 17:30~20:30 (排隊入場)</li>
<li>清水寺　夜楓點燈 ~21:30(不用預約)</li>
</ol>
]]></content>
      <categories>
        <category>日本旅遊</category>
      </categories>
      <tags>
        <tag>日本旅遊</tag>
        <tag>京都</tag>
        <tag>大阪</tag>
        <tag>秋季</tag>
        <tag>楓葉</tag>
        <tag>紅葉</tag>
        <tag>關西</tag>
      </tags>
  </entry>
  <entry>
    <title>美國運通希爾頓卡/Surpass®卡：申請過程與使用心得</title>
    <url>/post/6f979dc2/</url>
    <content><![CDATA[<p><img data-src="https://cdn.jsdelivr.net/gh/j4nusl1n/blog-images@master/amex_hilton_cards/Hilton-Honors-American-Express-Surpass-Card-2.17cyt0nvd5ts.webp" alt="Hilton Honors American Express Surpass® Card 2"><em>© 2024 Hilton</em></p>
<h2 id="美國運通希爾頓卡-Surpass®卡：申請過程與使用心得">美國運通希爾頓卡/Surpass®卡：申請過程與使用心得</h2>
<h3 id="引言">引言</h3>
<p>前陣子美國運通推出了希爾頓聯名卡系列低階及中階卡的高額開卡獎勵，這引起了我的注意。身為一個對常旅客計畫有興趣的旅行者，我決定利用這次機會，申請了兩張美國運通希爾頓聯名卡：中階版的 <em>Hilton Honors American Express Surpass® Card</em> 和免年費的 <em>Hilton Honors American Express Card</em>。這不僅能讓我獲得豐厚的開卡獎勵，還能幫助我最大化在希爾頓的住宿體驗和獎勵。<br>
這篇文章將分享我的申請過程和初步使用心得。</p>
<span id="more"></span>
<h3 id="申請過程概述">申請過程概述</h3>
<p>2024年5月份左右 <em>Hilton Honors American Express Surpass® Card</em> 及 <em>Hilton Honors American Express Card</em> 分別有 <strong>130K+1張免費住宿獎勵券(Free Night, 下稱FN)</strong> 及 <strong>70K+1FN</strong>的開卡獎勵，截止日期為2024/07/31。<br>
雖然開卡獎勵沒有到歷史最高，但有給FN還是很吸引人，尤其希爾頓的FN沒有限制，只要酒店有可以兌換的最低等級房型就能使用。<br>
因此我先申請了 <em>Hilton Honors American Express Surpass® Card</em> 並使用國際轉卡，申請當下已持有台灣美國運通卡7個月左右。<br>
在核卡之後，趕在這波開卡獎勵申請截止07/31前，我又申請了免年費版的 <em>Hilton Honors American Express Card</em> 。<br>
第一張因為要用國際轉卡，所以花了一些時間打電話給客服核對資料花了一些時間。第二張卡申請過程就簡單多了，從送出申請到核卡，整個過程大約花了一週時間。</p>
<h3 id="各卡申請詳情">各卡申請詳情</h3>
<h4 id="申請背景">申請背景</h4>
<ul>
<li>信用歷史: 6m
<ul>
<li><strong>CapitalOne QuickSilver Credit Card</strong> 額度 $1550</li>
</ul>
</li>
<li>無SSN，使用ITIN申請</li>
<li>持有台灣美國運通卡7個月(since 2023/10)</li>
<li>回饋皆為Hilton Honors點數，下面敘述 Nx 代表每一美金回饋 N 點</li>
</ul>
<h4 id="Hilton-Honors-American-Express-Surpass®-Card">Hilton Honors American Express Surpass® Card</h4>
<h5 id="回饋及權益">回饋及權益</h5>
<ul>
<li>開卡禮 130K點數 + 1 FN，條件為 6 個月內消費 USD $3000</li>
<li>USD $150 年費</li>
<li>12x 希爾頓酒店消費</li>
<li>6x 美國餐廳、超市和加油站消費</li>
<li>4x 美國網購消費</li>
<li>3x 其餘類別消費</li>
<li>每季 USD $50 額度希爾頓酒店退額(一年 USD $200)
<ul>
<li>雖然條款寫必須使用在入住房費，但有多數分享指出可透過在酒店餐廳吃飯或是購買Hilton Gift Card，也能成功使用退額</li>
</ul>
</li>
<li>持卡即有希爾頓金卡會員資格
<ul>
<li>每日曆年消費US$40K可獲得Hilton Diamond會員資格</li>
</ul>
</li>
<li>達到消費US$15K門檻可獲得 1 FN</li>
<li>無海外交易手續費(Foreign Transaction Fee, FTF)</li>
</ul>
<h5 id="申請流程">申請流程</h5>
<p>5月底左右透過AMEX官網申請，申請時點選 <em>New to the U.S., but have an American Express account or international credit history in another country? (Optional)</em> 下方的按鈕(如下圖)<br>
<img data-src="https://cdn.jsdelivr.net/gh/j4nusl1n/blog-images@master/amex_hilton_cards/web_application.77lq7ejqtf40.webp" alt="網頁申請頁面截圖"><br>
接著登入台灣美國運通的帳號，以便帶入台灣美國運通的持卡紀錄。</p>
<p>送出申請之後，過幾天Email收到信件說明需要提供更多資訊，打電話給客服確認身份等資訊，電話中直接確認核卡，額度 $10000 比預期的高不少。</p>
<h4 id="Hilton-Honors-American-Express-Card">Hilton Honors American Express Card</h4>
<h5 id="回饋及權益-2">回饋及權益</h5>
<ul>
<li>開卡禮 70K點數 + 1 FN，條件為 6 個月內消費 USD $2000</li>
<li>無年費</li>
<li>7x 希爾頓酒店消費</li>
<li>5x 美國餐廳、超市和加油站消費積分</li>
<li>3x 其他消費積分</li>
<li>持卡即有希爾頓銀卡會員資格</li>
<li>無海外交易手續費(Foreign Transaction Fee, FTF)</li>
</ul>
<h5 id="申請流程-2">申請流程</h5>
<p>透過AMEX官網登入現有美卡帳號申請，填寫完資料後送出沒有立即核卡。</p>
<p>過幾天後接到客服電話，要求提供 SSN card及護照，我選擇上傳ITIN CP565 letter及護照。<br>
再過了兩三天左右收到Email通知核卡，額度 USD $1000</p>
<h3 id="使用心得">使用心得</h3>
<p>整體來說在台灣能刷AMEX美卡的地方不算少，但多數是連鎖品牌或是要認聯信NCCC卡機，另外有時候會遇到連線授權時間過久的狀況。</p>
<p>特別提一下在中油直營的自助加油機可以刷，但只能用插卡方式。<br>
如果用感應或是Apple Pay的話，自助加油機會當機然後重啟，大概3~5分鐘後才能重新使用，別問我怎麼知道的 🥴</p>
<p>而且去年底寒舍艾麗有風聲傳加入希爾頓集團，後來果真從2024年1月官方宣布為Curio Collection品牌之一，之後要用掉 Surpass® 卡的退額又多了個地方。<br>
不然之前台北要能靠不住房吃餐廳的話，就要跑到新板希爾頓比較麻煩一點。</p>
<h4 id="Hilton-Honors-American-Express-Card-2">Hilton Honors American Express Card</h4>
<p><strong>優點：</strong></p>
<ul>
<li>無年費，適合長期持有保持信用紀錄</li>
<li>可以升級到最高階的 Amex Hilton Honors Aspire Credit Card 獲得升級FN</li>
<li>沒有FTF方便在台灣使用</li>
</ul>
<p><strong>缺點：</strong></p>
<ul>
<li>積分累積速度相對較慢</li>
<li>缺乏高階會員福利</li>
</ul>
<h4 id="Hilton-Honors-American-Express-Surpass®-Card-2">Hilton Honors American Express Surpass® Card</h4>
<p><strong>優點：</strong></p>
<ul>
<li>在希爾頓消費比起免年費卡的回饋高不少</li>
<li>扣除一年 USD $200 退額後實質年費 -$50</li>
<li>金卡會員提供的權益：
<ul>
<li>有機會獲得房間升等</li>
<li>免費早餐或食物飲料消費額度（視酒店品牌而定）</li>
<li>住房額外80%積分獎勵</li>
<li>延遲退房（視供應情況而定）</li>
</ul>
</li>
<li>達到消費門檻可再獲得 1 FN</li>
<li>沒有FTF方便在台灣使用</li>
</ul>
<p><strong>缺點：</strong></p>
<ul>
<li>有年費，需要每季使用才行</li>
<li>高階會員福利僅限於希爾頓酒店使用</li>
</ul>
<h3 id="總結與建議">總結與建議</h3>
<p>兩張卡各有優勢，適合不同的用戶群。對於偶爾一季入住希爾頓酒店一次的人來說，Surpass® 卡的價值更為明顯。但如果只是為了不關卡維持信用歷史，低階的 Hilton 卡可能更為合適。我建議仔細評估自己的消費習慣和旅行頻率，選擇最適合自己的卡片。</p>
<h3 id="未來展望">未來展望</h3>
<p>未來幾個月內刷完這兩張卡的開卡禮，之後再考慮把 Surpass® 卡降級為無年費卡。<br>
也還在考慮是否要進一步申請最高階的 Hilton Honors Aspire Card，以獲得鑽石會員身份和更多權益。</p>
<h3 id="結語">結語</h3>
<p>其實最初轉卡是打算申請Aspire卡拿希爾頓鑽石會員，但是1月時申請轉卡被要求提供銀行員簽名信件作為地址證明，覺得很麻煩就放著沒繼續申請。不確定是不是當時台灣這邊持卡才剛滿90天還不夠久，所以轉卡沒成功。<br>
沒想到5月時一樣能用轉卡申請，而且給的信用額度蠻高的，或許是有參考台灣的額度也說不定🤔</p>
<p>AMEX這邊應該暫時先停止開新卡了，接下來要把目標放在Chase的幾張卡像是Chase Sapphire Preferred或是Chase Marriott Boundless</p>
<hr>
<p>ref.</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudXNjcmVkaXRjYXJkZ3VpZGUuY29tL2FtZXgtaGlsdG9uLXN1cnBhc3Mv">美卡指南 Amex Hilton Surpass® 卡說明<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudXNjcmVkaXRjYXJkZ3VpZGUuY29tL2FtZXgtaGlsdG9uLw==">美卡指南 Amex Hilton 卡說明<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cudHJpcHBsdXMuY2MvY2FyZHBsdXMvdXNjYXJkLWluLXR3P2xhbmc9emgtaGFudA==">Tripplus 台灣可刷美卡店家彙整<i class="fa fa-external-link-alt"></i></span></li>
</ul>
]]></content>
      <categories>
        <category>信用卡</category>
        <category>美國信用卡</category>
        <category>AMEX</category>
      </categories>
      <tags>
        <tag>美國信用卡</tag>
        <tag>AMEX</tag>
        <tag>Hilton Honors</tag>
        <tag>酒店常旅客</tag>
      </tags>
  </entry>
  <entry>
    <title>Selenium 網頁爬蟲簡單分享 in Python</title>
    <url>//2023/03/21/selenium-intro/</url>
    <content><![CDATA[<h2 id="什麼是-Selenium？">什麼是 Selenium？</h2>
<p><strong>Selenium</strong> 網頁爬蟲是一種透過程式模仿人類操作瀏覽器的方式，例如點擊連結、填入文字框等等，以便取得網頁中的資料</p>
<span id="more"></span>
<h2 id="如何安裝使用-Selenium">如何安裝使用 Selenium</h2>
<p>以下程式範例使用 Python 3.8，環境設定的部分暫不贅述</p>
<h3 id="安裝-Selenium">安裝 Selenium</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure>
<h3 id="安裝瀏覽器驅動-Web-driver">安裝瀏覽器驅動(Web driver)</h3>
<p>要讓 Selenium 操作瀏覽器時，需要安裝對應的瀏覽器驅動，下列為幾種常用的瀏覽器驅動，可以依照個人喜好挑選</p>
<ul>
<li>Chrome: <span class="exturl" data-url="aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL2EvY2hyb21pdW0ub3JnL2Nocm9tZWRyaXZlci9kb3dubG9hZHM=">https://sites.google.com/a/chromium.org/chromedriver/downloads<i class="fa fa-external-link-alt"></i></span></li>
<li>Firefox: <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21vemlsbGEvZ2Vja29kcml2ZXIvcmVsZWFzZXM=">https://github.com/mozilla/geckodriver/releases<i class="fa fa-external-link-alt"></i></span></li>
<li>Edge: <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubWljcm9zb2Z0LmNvbS9lbi11cy9taWNyb3NvZnQtZWRnZS90b29scy93ZWJkcml2ZXIv">https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/<i class="fa fa-external-link-alt"></i></span></li>
<li>Safari: <span class="exturl" data-url="aHR0cHM6Ly93ZWJraXQub3JnL2Jsb2cvNjkwMC93ZWJkcml2ZXItc3VwcG9ydC1pbi1zYWZhcmktMTAv">https://webkit.org/blog/6900/webdriver-support-in-safari-10/<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<p>後續範例皆使用 Chrome 瀏覽器</p>
<h2 id="Selenium-示範">Selenium 示範</h2>
<p>下面為一段簡單的範例程式碼</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="comment"># specify the path to the browser driver executable</span></span><br><span class="line">browser = webdriver.Chrome(<span class="string">&#x27;/path/to/chromedriver&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># navigate to a webpage</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.example.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># find an element by its CSS selector and click on it</span></span><br><span class="line">button = browser.find_element_by_css_selector(<span class="string">&#x27;#my-button&#x27;</span>)</span><br><span class="line">button.click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># fill out a form and submit it</span></span><br><span class="line">input_field = browser.find_element_by_css_selector(<span class="string">&#x27;#my-input&#x27;</span>)</span><br><span class="line">input_field.send_keys(<span class="string">&#x27;Hello, World!&#x27;</span>)</span><br><span class="line">submit_button = browser.find_element_by_css_selector(<span class="string">&#x27;#submit-button&#x27;</span>)</span><br><span class="line">submit_button.click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># extract information from the page</span></span><br><span class="line">heading = browser.find_element_by_css_selector(<span class="string">&#x27;h1&#x27;</span>).text</span><br><span class="line">paragraphs = browser.find_elements_by_css_selector(<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> paragraphs:</span><br><span class="line">    <span class="built_in">print</span>(p.text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># close the browser window</span></span><br><span class="line">browser.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>在這個範例中，我們使用了 Selenium 驅動了 Chrome 瀏覽器，執行時會自動開啟一個瀏覽器畫面。<br>
接著我們開啟 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20=">https://www.example.com<i class="fa fa-external-link-alt"></i></span>，並且使用 CSS 選擇器選定一個按鈕點擊它。<br>
再來繼續使用 CSS 選擇器找到文字框，輸入 <code>Hello, World!</code>，找到送出按鈕送出表單。<br>
接下來再取得網頁中標題<code>h1</code>以及文字段落<code>p</code>，並且印出所有文字段落內的文字。<br>
最後在結束前，別忘了使用<code>quit()</code>關閉瀏覽器。<br>
以上範例只是個參考，讓大家能夠大略上理解，如何透過 Selenium 操控瀏覽器將瀏覽網頁行為自動化。</p>
<p>接著會再介紹如何應用 Selenium 的其他功能，以便應付更複雜的情境。</p>
<h2 id="如何等待特定條件滿足後接續執行">如何等待特定條件滿足後接續執行</h2>
<p>如果我們需要等待網頁DOM元件產生之後再爬取資料的話，與其直接用<code>time.sleep()</code>的方式，更應該善用Selenium自帶的<code>WebDriverWait</code>類別及<code>expected_conditions</code>模組，來幫助我們寫出更有效率的爬蟲</p>
<p><code>WebDriverWait</code>是一個能夠等待特定條件達成後，才接著繼續執行後續程式的類別。  <code>expected_conditions</code>模組中有各種條件功能，能夠結合上面的類別，以便完成整個等待的過程。</p>
<p>下面是個簡單的範例程式碼，讓爬蟲等待網頁中特定DOM元件完成顯示之後，再點擊此元件：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"></span><br><span class="line"><span class="comment"># create a new Chrome browser instance</span></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line"><span class="comment"># navigate to the desired webpage</span></span><br><span class="line">browser.get(<span class="string">&#x27;https://www.example.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># wait for the element with ID &quot;my_element&quot; to become visible</span></span><br><span class="line">wait = WebDriverWait(browser, <span class="number">10</span>)</span><br><span class="line">element = wait.until(EC.visibility_of_element_located((By.ID, <span class="string">&#x27;my_element&#x27;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># do something with the element</span></span><br><span class="line">element.click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># close the browser window</span></span><br><span class="line">browser.quit()</span><br></pre></td></tr></table></figure>
<p>首先爬蟲開啟一個Chrome並且連到 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20=">https://www.example.com<i class="fa fa-external-link-alt"></i></span><br>
接著建立一個<code>WebDriverWait</code>物件，並且設定最大等待時間10秒</p>
<p>再來使用 <code>expected_conditions</code> 模組中的 <code>visibility_of_element_located</code>去偵測指定DOM元件是否已經顯示在網頁中。這個函式需要一個參數去指定要偵測的DOM元件，這邊使用的是DOM的ID <code>my_element</code></p>
<p><code>WebDriverWait</code>的<code>until</code>會等到條件滿足，或者是超過最大等待時間。若是條件滿足的話，則會回傳<code>visibility_of_element_located</code>中指定的元件，好讓我們能對此元件做互動</p>
<h2 id="擷取網頁回傳資料">擷取網頁回傳資料</h2>
<p>有時候我們如果在爬取網頁時，需要擷取特定Http Request回傳的資料時，這時候我們就可以利用 Selenium 的 <code>get_log</code> 方法來達成目的<br>
下面為簡單的程式範例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.desired_capabilities <span class="keyword">import</span> DesiredCapabilities</span><br><span class="line"></span><br><span class="line"><span class="comment"># configure Google Chrome logging preference to all logs</span></span><br><span class="line"><span class="comment"># always use copy() to create a new desired capabilities</span></span><br><span class="line"><span class="comment"># to avoid the side effects of altering the Global class instance.</span></span><br><span class="line">dc = DesiredCapabilities.CHROME.copy()</span><br><span class="line">dc[<span class="string">&quot;goog:loggingPrefs&quot;</span>] = &#123;<span class="string">&quot;performance&quot;</span>: <span class="string">&quot;ALL&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Launch the browser and navigate to the page you want to capture network response logs from</span></span><br><span class="line">driver = webdriver.Chrome(</span><br><span class="line">    desired_capabilities=dc,</span><br><span class="line">)</span><br><span class="line">driver.get(<span class="string">&#x27;https://www.example.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Retrieve the browser&#x27;s logs</span></span><br><span class="line">logs = driver.get_log(<span class="string">&#x27;performance&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Filter out the network response logs from the browser logs</span></span><br><span class="line">network_logs = [log <span class="keyword">for</span> log <span class="keyword">in</span> logs <span class="keyword">if</span> <span class="string">&#x27;Network.response&#x27;</span> <span class="keyword">in</span> log[<span class="string">&#x27;message&#x27;</span>]]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>在上述程式碼中，我們依序做了下面幾件事:</p>
<ol>
<li>設定Chrome記錄所有log並開啟瀏覽器</li>
<li>開啟我們想要抓取資料的網址</li>
<li>使用 <code>get_log()</code> 並且傳入參數 <code>'performance'</code>，讀取所有類型為performance的瀏覽器記錄</li>
<li>記錄的<code>message</code>中帶有 <code>Network.response</code> 的留下，剩餘的濾掉</li>
</ol>
<p>透過以上過程，我們可以取得網頁的Http response記錄</p>
<p>下一段我們使用 <code>execute_cdp_command</code> 方法來取得資料</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># continue from codes above</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> log <span class="keyword">in</span> network_logs:</span><br><span class="line">    <span class="comment"># parse JSON strings in log[&#x27;message&#x27;]</span></span><br><span class="line">    msg = json.loads(log[<span class="string">&#x27;message&#x27;</span>])[<span class="string">&#x27;message&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># check if method is Network.responseReceived</span></span><br><span class="line">    <span class="keyword">if</span> msg[<span class="string">&quot;method&quot;</span>] == <span class="string">&quot;Network.responseReceived&quot;</span>:</span><br><span class="line">        <span class="comment"># use Selenium execute_cdp_cmd to retrieve respnose data</span></span><br><span class="line">        data = driver.execute_cdp_cmd(</span><br><span class="line">            <span class="string">&quot;Network.getResponseBody&quot;</span>,</span><br><span class="line">            &#123;<span class="string">&quot;requestId&quot;</span>: msg[<span class="string">&quot;params&quot;</span>][<span class="string">&quot;requestId&quot;</span>]&#125;,</span><br><span class="line">        )</span><br><span class="line">        <span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure>
<p>接續前面取得的 <code>network_logs</code>，我們接著後續步驟取得回傳資料</p>
<ol>
<li>記錄的 <code>message</code> 欄位，其中資料為JSON string，因此使用 <code>json.loads()</code> 解析成 <code>dict</code> 格式並且留下 <code>message</code> 存到變數 <code>msg</code></li>
<li>檢查 <code>msg['method']</code> 是否為 <code>Network.responseReceived</code></li>
<li>使用 <code>execute_cdp_cmd()</code> 透過 Chrome DevTools Protocol 的 <span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWVkZXZ0b29scy5naXRodWIuaW8vZGV2dG9vbHMtcHJvdG9jb2wvdG90L05ldHdvcmsvI21ldGhvZC1nZXRSZXNwb25zZUJvZHk=">Network.getResponseBody<i class="fa fa-external-link-alt"></i></span> 指令，取得回傳資料</li>
</ol>
<p>以上範例簡單演練了如何取得網頁Http Response的資料，好讓我們能使用回傳資料做後續處理</p>
<h2 id="Optional-使用套件管理瀏覽器驅動">(Optional) 使用套件管理瀏覽器驅動</h2>
<p>由於前述的瀏覽器驅動需要依照使用者安裝的瀏覽器，去選擇下載對應版本的驅動，因此可以額外使用 python 套件 <code>Web Driver Manager</code> 去自動下載新的瀏覽器驅動。適合在本機開發時若是瀏覽器時常更新版本的話，就不需要手動去下載新的驅動</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install webdriver-manager</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.service <span class="keyword">import</span> Service</span><br><span class="line"><span class="keyword">from</span> webdriver_manager.chrome <span class="keyword">import</span> ChromeDriverManager</span><br><span class="line"><span class="keyword">from</span> webdriver_manager.core.utils <span class="keyword">import</span> ChromeType</span><br><span class="line"></span><br><span class="line">chrome_type = ChromeType.GOOGLE</span><br><span class="line">browser = webdriver.Chrome(</span><br><span class="line">    service=Service(</span><br><span class="line">        ChromeDriverManager(chrome_type=chrome_type).install()</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技術分享</category>
        <category>爬蟲</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>selenium</tag>
        <tag>crawler</tag>
        <tag>web crawler</tag>
        <tag>網頁爬蟲</tag>
      </tags>
  </entry>
</search>
